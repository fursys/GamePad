###############################################################################
#                                                                             #
#     IAR Assembler V6.21.1.52794/W32 for ARM 17/Nov/2012  13:46:55           #
#     Copyright 1999-2011 IAR Systems AB.                                     #
#                                                                             #
#           Source file   =  C:\skuksenk\_Quadro\ARM\prj\lib\FreeRTOS\Source\portable\IAR\ARM_CM3\portasm.s#
#           List file     =  C:\skuksenk\_Quadro\ARM\prj\STM32_GamePad\Debug\List\portasm.lst#
#           Object file   =  C:\skuksenk\_Quadro\ARM\prj\STM32_GamePad\Debug\Obj\portasm.o#
#           Command line  =  C:\skuksenk\_Quadro\ARM\prj\lib\FreeRTOS\Source\portable\IAR\ARM_CM3\portasm.s #
#                            -OC:\skuksenk\_Quadro\ARM\prj\STM32_GamePad\Debug\Obj\ #
#                            -s+ -M<> -w+ -r                                  #
#                            -LC:\skuksenk\_Quadro\ARM\prj\STM32_GamePad\Debug\List\ #
#                            -t8 --cpu Cortex-M3 --fpu None                   #
#                            -IC:\skuksenk\_Quadro\ARM\prj\STM32_GamePad\     #
#                                                                             #
###############################################################################

    1                          /*
    2                              FreeRTOS V7.1.0 - Copyright (C) 2011 Real
                                Time Engineers Ltd.
    3                                  
    4                          
    5                              *******************************************
                               ********************************
    6                               *                                         
                                                             *
    7                               *    FreeRTOS tutorial books are available
                                in pdf and paperback.        *
    8                               *    Complete, revised, and edited pdf
                                reference manuals are also       *
    9                               *    available.                           
                                                             *
   10                               *                                         
                                                             *
   11                               *    Purchasing FreeRTOS documentation
                                will not only help you, by       *
   12                               *    ensuring you get running as quickly
                                as possible and with an        *
   13                               *    in-depth knowledge of how to use
                                FreeRTOS, it will also help       *
   14                               *    the FreeRTOS project to continue with
                                its mission of providing     *
   15                               *    professional grade, cross platform,
                                de facto standard solutions    *
   16                               *    for microcontrollers - completely
                                free of charge!                  *
   17                               *                                         
                                                             *
   18                               *    >>> See http://www.FreeRTOS.org/Docum
                               entation for details. <<<     *
   19                               *                                         
                                                             *
   20                               *    Thank you for using FreeRTOS, and
                                thank you for your support!      *
   21                               *                                         
                                                             *
   22                              *******************************************
                               ********************************
   23                          
   24                          
   25                              This file is part of the FreeRTOS
                                distribution.
   26                          
   27                              FreeRTOS is free software; you can
                                redistribute it and/or modify it under
   28                              the terms of the GNU General Public License
                                (version 2) as published by the
   29                              Free Software Foundation AND MODIFIED BY
                                the FreeRTOS exception.
   30                              >>>NOTE<<< The modification to the GPL is
                                included to allow you to
   31                              distribute a combined work that includes
                                FreeRTOS without being obliged to
   32                              provide the source code for proprietary
                                components outside of the FreeRTOS
   33                              kernel.  FreeRTOS is distributed in the
                                hope that it will be useful, but
   34                              WITHOUT ANY WARRANTY; without even the
                                implied warranty of MERCHANTABILITY
   35                              or FITNESS FOR A PARTICULAR PURPOSE.  See
                                the GNU General Public License for
   36                              more details. You should have received a
                                copy of the GNU General Public
   37                              License and the FreeRTOS license exception
                                along with FreeRTOS; if not it
   38                              can be viewed here: http://www.freertos.org
                               /a00114.html and also obtained
   39                              by writing to Richard Barry, contact
                                details for whom are available on the
   40                              FreeRTOS WEB site.
   41                          
   42                              1 tab == 4 spaces!
   43                          
   44                              http://www.FreeRTOS.org - Documentation,
                                latest information, license and
   45                              contact details.
   46                          
   47                              http://www.SafeRTOS.com - A version that is
                                certified for use in safety
   48                              critical systems.
   49                          
   50                              http://www.OpenRTOS.com - Commercial
                                support, development, porting,
   51                              licensing and training services.
   52                          */
   53                          
   54                          #include <FreeRTOSConfig.h>
   55                          
   56                          /* For backward compatibility, ensure
                                configKERNEL_INTERRUPT_PRIORITY is
   57                          defined.  The value zero should also ensure
                                backward compatibility.
   58                          FreeRTOS.org versions prior to V4.3.0 did not
                                include this definition. */
   59                          #ifndef configKERNEL_INTERRUPT_PRIORITY
   60                                  #define configKERNEL_INTERRUPT_PRIORITY
                                0
   61                          #endif
   62                          
   63                                  
   64                                  RSEG    CODE:CODE(2)
   65                                  thumb
   66                          
   67                                  EXTERN vPortYieldFromISR
   68                                  EXTERN pxCurrentTCB
   69                                  EXTERN vTaskSwitchContext
   70                          
   71                                  PUBLIC vSetMSP
   72                                  PUBLIC xPortPendSVHandler
   73                                  PUBLIC vPortSetInterruptMask
   74                                  PUBLIC vPortClearInterruptMask
   75                                  PUBLIC vPortSVCHandler
   76                                  PUBLIC vPortStartFirstTask
   77                          
   78                          
   79                          /*---------------------------------------------
                               --------------*/
   80                          
   81                          vSetMSP
   82    00000000 80F30888             msr msp, r0
   83    00000004 7047                 bx lr
   84                                  
   85                          /*---------------------------------------------
                               --------------*/
   86                          
   87                          xPortPendSVHandler:
   88    00000006 EFF30980             mrs r0, psp                             
                                                               
   89    0000000A 1E4B                 ldr     r3, =pxCurrentTCB               
                                                           /* Get the location
                                                    of the current TCB.
                                                    */
   90    0000000C 1A68                 ldr     r2, [r3]                        
                                                                          
                                                    
   91                          
   92    0000000E 20E9F00F             stmdb r0!, {r4-r11}                     
                                                        /* Save the remaining
                                                 registers. */
   93    00000012 1060                 str r0, [r2]                            
                                                       /* Save the new top of
                                                stack into the first member of
                                                the TCB. */
   94                          
   95    00000014 08B5                 stmdb sp!, {r3, r14}
   96    00000016 4FF0BF00             mov r0, #configMAX_SYSCALL_INTERRUPT_PRI
                                               ORITY
   97    0000001A 80F31188             msr basepri, r0
   98    0000001E ........             bl vTaskSwitchContext                  
  
   99    00000022 4FF00000             mov r0, #0
  100    00000026 80F31188             msr basepri, r0
  101    0000002A BDE80840             ldmia sp!, {r3, r14}
  102                          
  103    0000002E 1968                 ldr r1, [r3]                            
                                                       
  104    00000030 0868                 ldr r0, [r1]                            
                                                       /* The first item in
                                                pxCurrentTCB is the task top of
                                                stack. */
  105    00000032 B0E8F00F             ldmia r0!, {r4-r11}                     
                                                        /* Pop the registers.
                                                 */
  106    00000036 80F30988             msr psp, r0                             
                                                                
  107    0000003A 7047                 bx r14                                  
                 
  108                          
  109                          
  110                          /*---------------------------------------------
                               --------------*/
  111                          
  112                          vPortSetInterruptMask:
  113    0000003C 01B4                 push { r0 }
  114    0000003E 4FF0BF00             mov R0, #configMAX_SYSCALL_INTERRUPT_PRI
                                               ORITY
  115    00000042 80F31188             msr BASEPRI, R0
  116    00000046 01BC                 pop { R0 }
  117                          
  118    00000048 7047                 bx r14
  119                                  
  120                          /*---------------------------------------------
                               --------------*/
  121                          
  122                          vPortClearInterruptMask:
  123    0000004A 01B4                 PUSH { r0 }
  124    0000004C 4FF00000             MOV R0, #0
  125    00000050 80F31188             MSR BASEPRI, R0
  126    00000054 01BC                 POP      { R0 }
  127                          
  128    00000056 7047                 bx r14
  129                          
  130                          /*---------------------------------------------
                               --------------*/
  131                          
  132                          vPortSVCHandler;
  133    00000058 0A4B                 ldr     r3, =pxCurrentTCB
  134    0000005A 1968                 ldr r1, [r3]
  135    0000005C 0868                 ldr r0, [r1]
  136    0000005E B0E8F00F             ldmia r0!, {r4-r11}
  137    00000062 80F30988             msr psp, r0
  138    00000066 4FF00000             mov r0, #0
  139    0000006A 80F31188             msr     basepri, r0
  140    0000006E 4EF00D0E             orr r14, r14, #13
  141    00000072 7047                 bx r14
  142                          
  143                          /*---------------------------------------------
                               --------------*/
  144                          
  145                          vPortStartFirstTask
  146                                  /* Use the NVIC offset register to
                                locate the stack. */
  147    00000074 0448                 ldr r0, =0xE000ED08
  148    00000076 0068                 ldr r0, [r0]
  149    00000078 0068                 ldr r0, [r0]
  150                                  /* Set the msp back to the start of the
                                stack. */
  151    0000007A 80F30888             msr msp, r0
  152                                  /* Call SVC to start the first task.
                                */
  153    0000007E 62B6                 cpsie i
  154    00000080 00DF                 svc 0
  155                          
  156                                  END
  156.1  00000082 0000                  TABLE
  156.2  00000084 ........             Reference on line 89,133 
  156.3  00000088 08ED00E0             Reference on line 147 
  156.4                                END (including table)
##############################
#           CRC:0            #
#        Errors:   0         #
#        Warnings: 0         #
#         Bytes: 140         #
##############################



